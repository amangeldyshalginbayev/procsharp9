using System;
using System.Data.SqlTypes;
using System.IO;
using System.Text;

namespace SimpleFileIO
{
    class Program
    {
        static void Main(string[] args)
        {
            //SimpleIO();
            //FileOpenMethod();
            //OpenReadOpenWriteExample();
            //OpenTextExample();
            //AppendTextExample();
            //FileTypeExample();
            AtOnceExamples();
            
        }

        private static void SimpleIO()
        {
            Console.WriteLine("***** Simple IO with the File type *****\n");

            var fileName = @"/Users/aman/Desktop/files/repositories/procsharp9/Chapter_20/Test.dat";
            // Make a new file in the specified location
            FileInfo file = new FileInfo(fileName);
            using (FileStream fs = file.Create()) // fs.Close() is generated by compiler
            {
                // Use file stream object
            }
        }

        private static void FileOpenMethod()
        {
            var fileName = @"/Users/aman/Desktop/files/repositories/procsharp9/Chapter_20/Test2.dat";
            FileInfo fi = new FileInfo(fileName);
            using (FileStream fs = fi.Open(FileMode.OpenOrCreate,FileAccess.ReadWrite,FileShare.None))
            {
                // Use FileStream object
            }
            
            //fi.Delete();
        }

        private static void OpenReadOpenWriteExample()
        {
            var fileName = @"/Users/aman/Desktop/files/repositories/procsharp9/Chapter_20/Test5.txt";
            //FileInfo f3 = new FileInfo(fileName);
             // File must exist before using OpenRead()!!!
            //f3.Create().Close();
             // using (FileStream fs = f3.OpenRead())
             // {
             //     // use FileStream object
             // }
            //f3.Delete();
            

            // File created if it does not exist already
            // FileInfo f4 = new FileInfo(fileName);
            // using (FileStream fs = f4.OpenWrite())
            // {
            //     // use FileStream object
            //     fs.Write(Encoding.ASCII.GetBytes("C# the best"));
            //     fs.Flush();
            // }
            //
            //f4.Delete();
        }

        private static void OpenTextExample()
        {
            var fileName = @"/Users/aman/Desktop/files/repositories/procsharp9/Chapter_20/Test4.txt";
            FileInfo fi = new FileInfo(fileName);
            if (!fi.Exists)
                fi.Create().Close();

            using StreamReader sr = fi.OpenText();
            var text = sr.ReadToEnd();
            Console.WriteLine($"Read text from file: [{text}]");

            //fi.Delete();
        }

        private static void AppendTextExample()
        {
            var fileName = @"/Users/aman/Desktop/files/repositories/procsharp9/Chapter_20/Test99.txt";
            FileInfo fi = new FileInfo(fileName);
            // if (!fi.Exists)
            //     fi.Create().Close();

            using StreamWriter swcr = fi.CreateText();
            swcr.WriteLine("ga ga ga");

            using StreamWriter swa = fi.AppendText();
            swa.WriteLine("This new line APPENDED from C#!!!");
            
            fi.Delete();
        }

        private static void FileTypeExample()
        {
            var fileName = @"/Users/aman/Desktop/files/repositories/procsharp9/Chapter_20/Test4.txt";

            // using (FileStream fs = File.Create(fileName))
            // {
            //     fs.Write(Encoding.UTF8.GetBytes("This is new value overwrite content of the file!!!"));
            // }
            
            //File.Delete(fileName);
            //
            // using (FileStream fs = File.Open(fileName, FileMode.OpenOrCreate,FileAccess.ReadWrite,FileShare.None))
            // {
            //     fs.Write(Encoding.UTF8.GetBytes("This text is written with File.Open() method!!!"));
            // }

            using (StreamWriter sw = File.AppendText(fileName))
            {
                sw.WriteLine("\nThis line is appended >>>>>>>>");
            }
        }

        private static void AtOnceExamples()
        {
            var fileName = @"/Users/aman/Desktop/files/repositories/procsharp9/Chapter_20/todolist.txt";

            string[] myTasks = { "wake up", "have a breakfast", "have a lunch", "have a dinner", "sleep"};
            
            File.WriteAllLines(fileName,myTasks);

            foreach (var line in File.ReadAllLines(fileName))
            {
                Console.WriteLine($"TODO: {line}");
            }

            Console.ReadLine();
        }
    }
}